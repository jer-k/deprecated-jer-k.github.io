{"version":3,"sources":["webpack:///./src/templates/category-template.js"],"names":["CategoryTemplate","data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","category","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","edges","allMarkdownRemark","pageTitle","description"],"mappings":"2FACA,wGAiFeA,UAlEU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACJC,cAAtCC,EAD0C,EACjDC,MAA4BC,EADqB,EAC/BC,SAGxBC,EAMEN,EANFM,SACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,aACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,YACAC,EACEX,EADFW,YAGMC,EAAUb,EAAKc,kBAAfD,MACFE,EACJP,EAAc,EACPD,EADP,WAC0BC,EAD1B,MAC2CL,EACpCI,EAFP,MAEqBJ,EAEvB,OACE,kBAAC,IAAD,CAAQC,MAAOW,EAAWC,YAAaX,GACrC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMD,MAAOG,GACX,kBAAC,IAAD,CAAMM,MAAOA,IACb,kBAAC,IAAD,CACEJ,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,YAAaA","file":"component---src-templates-category-template-js-5de2179eebb50300deac.js","sourcesContent":["// @flow strict\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport Feed from \"../components/Feed\";\nimport Page from \"../components/Page\";\nimport Pagination from \"../components/Pagination\";\nimport { useSiteMetadata } from \"../hooks\";\nimport type { PageContext, AllMarkdownRemark } from \"../types\";\n\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext,\n};\n\nconst CategoryTemplate = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    category,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0\n      ? `${category} - Page ${currentPage} - ${siteTitle}`\n      : `${category} - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Header />\n      <Page title={category}>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CategoryPage($category: String, $postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          template: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            date\n            description\n            category\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n"],"sourceRoot":""}